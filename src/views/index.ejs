<<<<<<< HEAD
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.axis {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>
</script>
<script>
var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var  date_format = d3.time.format("%d %b");

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

//left hand side of bar scale
var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10); //zero based

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var url = 'http://localhost:5000/sales';
//fetch data from rest API
d3.json( url, function(error, data) {
  if (error) throw error;

  x.domain(data.map(function(d) { return d.name; }));
  y.domain([0, d3.max(data, function(d) { return d.subtotal; })]);

  //Y Axis Label
  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis) //builds the ticks
      .append("text") //builds the vertical y axis and it's label Sales
      .attr("transform", "rotate(-90)") //controls the label Sales angle
      .attr("y", 0)  //on the vertical line where is the label Sales going to  be
      .attr("dy", ".71em")  //attributes for Sales
      .style("text-anchor", "end")
      .text("Sales");

//X Axis tick labels
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);
               
//BARS: populate bars from data returned from rest API.
  svg.selectAll(".bar")
      .data(data)
      .enter().append("rect")
      .attr("class", "bar")
      
      //each bar's uniuqe x,y value in the spatial graphing area
      .attr("x", function(d) { return x(d.name); })     
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.subtotal); })
      .attr("height", function(d) { return height - y(d.subtotal); });
});

function type(d) {
  d.frequency = +Math.random();
  return d;
}

=======
<!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.axis {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

</style>
<body>
<script src="//d3js.org/d3.v3.min.js"></script>
<script>
</script>
<script>
var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var  date_format = d3.time.format("%d %b");

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

//left hand side of bar scale
var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10); //zero based

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var url = 'http://localhost:5000/sales';
//fetch data from rest API
d3.json( url, function(error, data) {
  if (error) throw error;

  x.domain(data.map(function(d) { return d.name; }));
  y.domain([0, d3.max(data, function(d) { return d.subtotal; })]);

  //Y Axis Label
  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis) //builds the ticks
      .append("text") //builds the vertical y axis and it's label Sales
      .attr("transform", "rotate(-90)") //controls the label Sales angle
      .attr("y", 0)  //on the vertical line where is the label Sales going to  be
      .attr("dy", ".71em")  //attributes for Sales
      .style("text-anchor", "end")
      .text("Sales");

//X Axis tick labels
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);
               
//BARS: populate bars from data returned from rest API.
  svg.selectAll(".bar")
      .data(data)
      .enter().append("rect")
      .attr("class", "bar")
      
      //each bar's uniuqe x,y value in the spatial graphing area
      .attr("x", function(d) { return x(d.name); })     
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.subtotal); })
      .attr("height", function(d) { return height - y(d.subtotal); });
});

function type(d) {
  d.frequency = +Math.random();
  return d;
}

>>>>>>> origin/master
</script>